version: 0.2

env:
  shell: bash
  variables:
    HUSKY_SKIP_INSTALL: 1

phases:
  install:
    runtime-versions:
      nodejs: 12
      docker: 19
    commands:
      - npm install
      - npm run postinstall
  pre_build:
    commands:
#      - npm test test

  build:
    commands:
      - echo Deploy started on `date`
      - echo "Assuming role $ROLE_ARN ..."
      - npm run build:all
      - npm run prepare:deploy:ci
      - CREDS=$(aws sts assume-role --role-arn $ROLE_ARN --role-session-name default --out json)
      - echo $CREDS > temp_creds.json
      - export AWS_ACCESS_KEY_ID=$(node -p "require('./temp_creds.json').Credentials.AccessKeyId")
      - export AWS_SECRET_ACCESS_KEY=$(node -p "require('./temp_creds.json').Credentials.SecretAccessKey")
      - export AWS_SESSION_TOKEN=$(node -p "require('./temp_creds.json').Credentials.SessionToken")
      - aws sts get-caller-identity
      - export ECR_ACCOUNT=$(node -p "require('./packages/titus-infra-aws-mira/config/default.json').accounts.${ENVIRONMENT}.env.account")
      - export ECR_REGION=$(node -p "require('./packages/titus-infra-aws-mira/config/default.json').accounts.${ENVIRONMENT}.env.region")
      - export ECR_REPOSITORY_NAME=$(node -p "require('./packages/titus-infra-aws-mira/config/default.json').accounts.${ENVIRONMENT}.env.awsEcrRepositoryName")
      - aws ecr get-login-password --region ${ECR_REGION} | docker login --username AWS --password-stdin ${ECR_ACCOUNT}.dkr.ecr.${ECR_REGION}.amazonaws.com
      - cd packages/titus-backend
      - docker build -t ${ECR_REPOSITORY_NAME} .
      - docker tag ${ECR_REPOSITORY_NAME}:latest ${ECR_ACCOUNT}.dkr.ecr.${ECR_REGION}.amazonaws.com/${ECR_REPOSITORY_NAME}:latest
      - docker push ${ECR_ACCOUNT}.dkr.ecr.${ECR_REGION}.amazonaws.com/${ECR_REPOSITORY_NAME}:latest
#      -
#      - cd packages/titus-infra-aws-mira && npx mira deploy --env=$ENVIRONMENT --file=cdk/index.js --role $ROLE_ARN --require-approval=never
  post_build:
    commands:
      - echo Build completed on `date`
artifacts:
  files: '**/*'
