{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Action": [
        "sts:AssumeRole"
      ],
      "Resource": [
        "*"
      ]
    },
    {
      "Effect": "Allow",
      "Action": [
        "cloudformation:CreateChangeSet",
        "cloudformation:DeleteChangeSet",
        "cloudformation:DescribeChangeSet",
        "cloudformation:DescribeStackEvents",
        "cloudformation:DescribeStacks",
        "cloudformation:DeleteStack",
        "cloudformation:ExecuteChangeSet",
        "cloudformation:GetTemplate"
      ],
      "Resource": [
        "arn:aws:cloudformation:{{region}}:{{account-id}}:stack/CDKToolkit/*"
      ]
    },
    {
      "Effect": "Allow",
      "Action": [
        "cloudformation:CreateChangeSet",
        "cloudformation:DeleteChangeSet",
        "cloudformation:CreateStack",
        "cloudformation:DeleteStack",
        "cloudformation:DescribeChangeSet",
        "cloudformation:DescribeStacks",
        "cloudformation:DescribeStackEvents",
        "cloudformation:ExecuteChangeSet",
        "cloudformation:GetTemplate",
        "cloudformation:UpdateStack",
        "cloudformation:ValidateTemplate"
      ],
      "Resource": [
        "arn:aws:cloudformation:{{region}}:{{account-id}}:stack/{{stack-name}}*"
      ]
    },
    {
      "Action": [
        "s3:DeleteObject",
        "s3:GetObject",
        "s3:ListBucket",
        "s3:PutObject",
        "s3:getBucketLocation"
      ],
      "Resource": "arn:aws:s3:::cdktoolkit-stagingbucket-*",
      "Effect": "Allow"
    },
    {
      "Effect": "Allow",
      "Resource": "*",
      "Action": [
        "apigateway:CreateAuthorizer",
        "apigateway:CreateDeployment",
        "apigateway:CreateResource",
        "apigateway:CreateRestApi",
        "apigateway:CreateStage",
        "apigateway:CreateVpcLink",
        "apigateway:DELETE",
        "apigateway:DeleteAuthorizer",
        "apigateway:DeleteDeployment",
        "apigateway:DeleteMethod",
        "apigateway:DeleteResource",
        "apigateway:DeleteRestApi",
        "apigateway:DeleteStage",
        "apigateway:DeleteVpcLink",
        "apigateway:GET",
        "apigateway:GetResources",
        "apigateway:GetStage",
        "apigateway:GetVpcLink",
        "apigateway:OPTIONS",
        "apigateway:PATCH",
        "apigateway:POST",
        "apigateway:PUT",
        "apigateway:PutIntegration",
        "apigateway:PutIntegrationResponse",
        "apigateway:PutMethod",
        "apigateway:PutMethodResponse",
        "apigateway:UpdateAccount",
        "apigateway:UpdateStage",
        "application-autoscaling:DeleteScalingPolicy",
        "application-autoscaling:DeregisterScalableTarget",
        "application-autoscaling:DescribeScalableTargets",
        "application-autoscaling:DescribeScalingPolicies",
        "application-autoscaling:PutScalingPolicy",
        "application-autoscaling:RegisterScalableTarget",
        "autoscaling:DeleteScalingPolicy",
        "autoscaling:DeregisterScalableTarget",
        "autoscaling:DescribeScalableTargets",
        "autoscaling:DescribeScalingPolicies",
        "autoscaling:PutScalingPolicy",
        "autoscaling:RegisterScalableTarget",
        "cloudfront:CreateDistribution",
        "cloudfront:CreateDistributionWithTags",
        "cloudfront:DeleteDistribution",
        "cloudfront:GetDistribution",
        "cloudfront:TagResource",
        "cloudfront:UpdateDistribution",
        "ec2:AssociateRouteTable",
        "ec2:AttachInternetGateway",
        "ec2:AuthorizeSecurityGroupEgress",
        "ec2:AuthorizeSecurityGroupIngress",
        "ec2:AllocateAddress",
        "ec2:CreateInternetGateway",
        "ec2:CreateNatGateway",
        "ec2:CreateRoute",
        "ec2:CreateRouteTable",
        "ec2:CreateSecurityGroup",
        "ec2:CreateSubnet",
        "ec2:CreateTags",
        "ec2:CreateVpc",
        "ec2:CreateVpcEndpointServiceConfiguration",
        "ec2:DeleteVpcEndpointServiceConfigurations",
        "ec2:Describe*",
        "ec2:ModifySubnetAttribute",
        "ec2:ModifyVpcAttribute",
        "ec2:ModifyVpcEndpointServicePermissions",
        "ec2:ReleaseAddress",
        "ec2:RevokeSecurityGroupEgress",
        "ecs:CreateCluster",
        "ecs:CreateService",
        "ecs:DeleteCluster",
        "ecs:DeleteService",
        "ecs:DeregisterTaskDefinition",
        "ecs:DescribeClusters",
        "ecs:DescribeServices",
        "ecs:RegisterTaskDefinition",
        "elasticloadbalancing:AddTags",
        "elasticloadbalancing:CreateListener",
        "elasticloadbalancing:CreateLoadBalancer",
        "elasticloadbalancing:CreateTargetGroup",
        "elasticloadbalancing:DeleteListener",
        "elasticloadbalancing:DeleteLoadBalancer",
        "elasticloadbalancing:DeleteTargetGroup",
        "elasticloadbalancing:DescribeListeners",
        "elasticloadbalancing:DescribeLoadBalancers",
        "elasticloadbalancing:DescribeTargetGroups",
        "elasticloadbalancing:RemoveTags",
        "iam:AttachRolePolicy",
        "iam:CreateRole",
        "iam:DeleteRole",
        "iam:DeleteRolePolicy",
        "iam:DetachRolePolicy",
        "iam:GetRole",
        "iam:GetRolePolicy",
        "iam:PassRole",
        "iam:PutRolePolicy",
        "lambda:AddPermission",
        "lambda:CreateFunction",
        "lambda:DeleteFunction",
        "lambda:GetFunction",
        "lambda:GetFunctionConfiguration",
        "lambda:InvokeFunction",
        "lambda:RemovePermission",
        "logs:CreateLogGroup",
        "logs:CreateLogStream",
        "logs:DeleteLogGroup",
        "logs:DescribeLogGroups",
        "logs:DescribeLogStreams",
        "logs:PutRetentionPolicy",
        "rds:AddTagsToResource",
        "rds:CreateDBInstance",
        "rds:CreateDBSubnetGroup",
        "rds:DeleteDBInstance",
        "rds:DeleteDBSubnetGroup",
        "rds:DescribeDBInstances",
        "rds:DescribeDBSubnetGroups",
        "route53:ChangeResourceRecordSets",
        "route53:GetChange",
        "route53:GetHostedZone",
        "secretsmanager:CreateSecret",
        "secretsmanager:DeleteSecret",
        "secretsmanager:GetRandomPassword",
        "secretsmanager:GetSecretValue",
        "secretsmanager:PutSecretValue",
        "secretsmanager:TagResource",
        "ssm:AddTagsToResource",
        "ssm:DeleteParameter",
        "ssm:GetParameters",
        "ssm:PutParameter",
        "ssm:RemoveTagsFromResource",
        "sts:AssumeRole"
      ]
    },
    {
      "Effect": "Allow",
      "Resource": "*",
      "Condition": {
        "StringLike": {
          "aws:ResourceTag/StackName": "{{stack-name}}*"
        }
      },
      "Action": [
        "ec2:DeleteInternetGateway",
        "ec2:DeleteNatGateway",
        "ec2:DeleteRoute",
        "ec2:DeleteRouteTable",
        "ec2:DeleteSecurityGroup",
        "ec2:DeleteSubnet",
        "ec2:DeleteVpc",
        "ec2:DetachInternetGateway",
        "ec2:DisassociateRouteTable"
      ]
    },
    {
      "Effect": "Allow",
      "Resource": [
        "*"
      ],
      "Action": [
        "cognito-idp:CreateUserPool"
      ]
    },
    {
      "Effect": "Allow",
      "Resource": "arn:aws:cognito-idp:{{region}}:{{account-id}}:userpool/{{region}}*",
      "Action": [
        "cognito-idp:CreateUserPoolClient"
      ]
    },
    {
      "Effect": "Allow",
      "Resource": "arn:aws:cognito-idp:{{region}}:{{account-id}}:userpool/{{region}}*",
      "Condition": {
        "StringLike": {
          "aws:ResourceTag/StackName": "{{stack-name}}*"
        }
      },
      "Action": [
        "cognito-idp:DeleteUserPool",
        "cognito-idp:DeleteUserPoolClient"
      ]
    },
    {
      "Effect": "Allow",
      "Resource": "arn:aws:cognito-identity:{{region}}:{{account-id}}:identitypool/*",
      "Action": [
        "cognito-identity:CreateIdentityPool",
        "cognito-identity:DeleteIdentityPool",
        "cognito-identity:SetIdentityPoolRoles"
      ]
    },
    {
      "Effect": "Allow",
      "Resource": "arn:aws:s3:::{{stack-name-lower-case}}*",
      "Action": [
        "s3:CreateBucket"
      ]
    },
    {
      "Effect": "Allow",
      "Resource": [
        "arn:aws:s3:::{{stack-name-lower-case}}*"
      ],
      "Action": [
        "s3:DeleteBucket",
        "s3:DeleteBucketPolicy",
        "s3:GetBucketPolicy",
        "s3:PutBucketPolicy",
        "s3:PutBucketTagging",
        "s3:PutBucketWebsite"
      ]
    }
  ]
}
